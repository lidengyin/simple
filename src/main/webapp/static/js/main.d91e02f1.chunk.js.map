{"version":3,"sources":["utils/storageUtils.js","utils/users.js","ajax/ajax.js","ajax/types.js","components/admin/admin.js","components/home/titles/titles.js","components/home/write/wirte.js","components/home/details/datails_son/datails_son.js","components/home/details/details.js","components/home/home.js","components/login/login.js","App.js","index.js"],"names":["saveUser","user","store","set","getUser","get","removeUser","remove","ajax","url","data","method","qs","stringify","Promise","resolve","reject","axios","params","post","setRequestProperty","then","response","console","log","catch","error","message","addNewUser","userName","password","Base","adminUser","addComment","infos","addComments","messagedetail","getTitles","page","rows","desc","getSonDetails","mid","delComment","mids","Item","Admin","toLogin","props","history","push","handleSubmit","event","preventDefault","form","validateFields","err","values","a","result","flag","success","userinfo","storageUtils","User","replace","this","getFieldDecorator","className","onSubmit","prefix","type","style","color","placeholder","htmlType","onClick","Component","WrapAdmin","create","Title","state","total","titles","loading","deletemessage","setState","getDetail","record","getProducts","pageNum","clearTimeout","timeouter","callback","PubSub","publish","reload","subscribe","msg","columns","title","dataIndex","key","render","text","width","height","uid","StorageUtils","id","size","disabled","rowKey","dataSource","pagination","showQuickJumper","onChange","current","TextArea","Write","contentCounts","commentCounts","content","comment","display2","display3","getDate","Date","time","getFullYear","getMonth","getHours","getMinutes","getSeconds","out","window","confirm","messageinfo","mtime","obj","mcontent","onSubmit1","counterTitle","titleCounts","target","value","length","slice","counterContent","num","count","trim","write1","write2","fontSize","display","marginLeft","autosize","minRows","SonExampleComment","load","Datails","detailsReload","display1","detail_id","detail_mid","detail","ui","comments","YorN","author","location","reverse","map","index","Home","path","component","to","Login","password2","result1","validatePwd","rule","test","rules","required","whitespace","min","max","validator","WrapLogin","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d91e02f1.chunk.js","sourcesContent":["import store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}\r\n","export default {\r\n  user: {} // 保存当前登陆的user\r\n}\r\n","import qs from 'qs'\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\n\r\n\r\nexport default function ajax(url,data={},method='GET',deFault=true) {\r\n\r\n    if(deFault){\r\n      data = qs.stringify(data)\r\n    }\r\n    return new Promise((resolve,reject)=>{\r\n        let promise\r\n        if(method==='GET'){\r\n          promise = axios.get(url,{\r\n            params:data\r\n          })\r\n        }else{\r\n          promise = axios.post(url,data,\r\n            {\r\n                setRequestProperty:(\"Content-Type\",\"application/x-javascript;charset=utf-8\")//发送json数据\r\n              })\r\n        }\r\n        promise.then(response =>{\r\n          console.log(response)\r\n          resolve(response.data)\r\n        }).catch(error =>{\r\n          message.error(\"请求错误\")\r\n        })\r\n      })\r\n}\r\n\r\n\r\n\r\n","import ajax from './ajax'\r\n//定义请求的方法\r\nconst Base = '/bbs1'\r\n//注册\r\nexport const addNewUser = (userName,password) =>ajax(Base+'/admininfo/register',{userName,password},'POST',true)\r\n//登录\r\nexport const adminUser = (userName,password) =>ajax(Base+'/admininfo/login',{userName,password},'POST')\r\n//发表自己的留言\r\nexport const addComment = (infos) =>ajax(Base+'/messageinfo/commitmessage',infos,'POST',false)\r\n//发表评论\r\nexport const addComments = (messagedetail) =>ajax(Base+'/messageinfo/writecomment',messagedetail,'POST')\r\n//获取标题\r\nexport const getTitles = (page, rows,desc) =>ajax(Base+'/messageinfo/list',{page,rows,desc},'POST')\r\n//获取细目\r\nexport const getDetail = (mid) =>ajax(Base+'/messageinfo/getmessageinfo',{mid},'POST')\r\n//获取子评论\r\nexport const getSonDetails = (mid) =>ajax(Base+'/messageinfo/getmessagedetail',{mid},'POST')\r\n//删除留言\r\nexport const delComment = (mids) =>ajax(Base+'/messageinfo/deletemessage',{mids},'POST')\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Icon,\r\n    Input,\r\n    Button,\r\n    message\r\n} from 'antd'\r\n\r\nimport {adminUser} from '../../ajax/types'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport User from '../../utils/users'\r\nimport './admin.less'\r\n\r\nconst Item =Form.Item\r\n\r\nclass Admin extends Component {\r\n\r\n  toLogin = () =>{\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  componentDidMount() {\r\n    storageUtils.removeUser()\r\n    User.user = {}\r\n  }\r\n\r\n  handleSubmit = (event)=>{\r\n    event.preventDefault() //阻止表单的默认行为\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async(err, values) => {\r\n      // 检验成功\r\n      if (values.userName && values.password) {\r\n        // 请求登陆\r\n        const result = await adminUser(values.userName, values.password)\r\n        if (result.flag === 1) { // 登陆成功\r\n          // 提示登陆成功\r\n          console.log(result)\r\n          message.success('登陆成功')\r\n          const user = result.userinfo // 保存在内存中\r\n          storageUtils.saveUser(user) // 保存到local中\r\n          User.user = user\r\n          // 跳转到管理界面 (不需要再回退回到登陆)\r\n          this.props.history.replace('/home')\r\n        } else {\r\n          message.error('账户或密码不正确')\r\n        }\r\n      } else {\r\n        message.error('用户名和密码不能为空')\r\n      }\r\n    });\r\n  }\r\n\r\n    render() {\r\n        const form = this.props.form\r\n        const {getFieldDecorator} =form\r\n        return (\r\n          <div className=\"admin\">\r\n              <header className=\"admin-header\">\r\n                  <h1>BBS</h1>\r\n              </header>\r\n              <section className=\"admin-content\">\r\n                  <h2>用户登陆</h2>\r\n                  <Form onSubmit={this.handleSubmit} className=\"admin-form\">\r\n                    <Item>\r\n                      {\r\n                        getFieldDecorator('userName', {\r\n                        })(\r\n                          <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"用户名\"\r\n                          />\r\n                        )\r\n                      }\r\n                    </Item>\r\n                    <Item>\r\n                      {\r\n                        getFieldDecorator('password', {\r\n\r\n                        })(\r\n                          <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"密码\"\r\n                          />\r\n                        )\r\n                      }\r\n                    </Item>\r\n                      <Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-form-button\">\r\n                              登录\r\n                          </Button>\r\n                      </Item>\r\n                    <Item>\r\n                      <Button type=\"primary\" onClick={this.toLogin} className=\"admin-form-button\">\r\n                        注册\r\n                      </Button>\r\n                    </Item>\r\n                  </Form>\r\n              </section>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrapAdmin = Form.create()(Admin)\r\nexport default WrapAdmin\r\n","import React, {Component} from 'react';\r\nimport {Table} from 'antd';\r\nimport {message} from 'antd'\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport {getTitles,delComment} from '../../../ajax/types'\r\nimport StorageUtils from '../../../utils/storageUtils'\r\nimport './titles.less'\r\n\r\nexport default class Title extends Component {\r\n\r\n  state = {\r\n    total:10,      //总数\r\n    page:1,         //当前页数\r\n    titles : [],    //存放标题\r\n    loading:false,   //是否出现加载中图片\r\n    desc:0,     //正逆序，默认正序\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // 卸载异步操作设置状态\r\n    clearTimeout(this.timeouter)\r\n    this.setState = (state, callback) => {\r\n      return\r\n    }\r\n  }\r\n\r\n  //一开始挂起便请求标题，并修改state\r\n  async componentDidMount() {\r\n    PubSub.publish('write1','block')\r\n    PubSub.publish('write2','none')\r\n    let {page,desc} = this.state     //获取当前的页数\r\n    this.reload = PubSub.subscribe('reload',async (msg,data)=>{   //每当用户发表的文章的时候及时更新\r\n      if(data==='true'){\r\n        this.setState({loading:true})     //开始请求出现load\r\n        const result = await getTitles(page,10,desc)\r\n        this.setState({total:result.total,titles:result.rows,loading:false})\r\n      }\r\n    })\r\n    this.setState({loading:true})     //开始请求出现load\r\n    let result = await getTitles(page,10,desc) //发送请求当前页面的标题\r\n    this.setState({total:result.total,titles:result.rows,loading:false})  //请求完成取消load，以及改变state中的值\r\n  }\r\n\r\n  //删除留言\r\n  deletemessage = async (mids)=>{\r\n    const result = await delComment(mids+\",\")\r\n    if(result.flag === '1'){\r\n      message.success('删除成功')\r\n      const {page,desc} = this.state\r\n      this.setState({loading:true})     //开始请求出现load\r\n      const result = await getTitles(page,10,desc)\r\n      this.setState({total:result.total,titles:result.rows,loading:false})\r\n    }else{\r\n      message.error('删除失败')\r\n    }\r\n  }\r\n  //获取明细\r\n  getDetail = (record)=>{\r\n    this.props.history.push('/home/detail',{record})\r\n  }\r\n\r\n  //获取页数\r\n  getProducts = async (pageNum)=>{\r\n    const {desc} = this.state\r\n    this.pageNum = pageNum\r\n    this.setState({page:pageNum})\r\n    this.setState({loading:true})//开始请求出现load\r\n    const result = await getTitles(pageNum,10,desc)\r\n    this.setState({total:result.total,titles:result.rows,loading:false})//请求完成取消load，以及改变state中的值\r\n  }\r\n\r\n\r\n    render() {\r\n      const {loading,total} = this.state\r\n\r\n      const columns = [\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title',\r\n          key:\"key\",\r\n          render:(text, record) => <a onClick={()=>this.getDetail(record)}>{text}</a>,//点击获取对应的id\r\n          width:'40%',\r\n          className:'Titles'\r\n        },\r\n        {\r\n          title: '作者',\r\n          dataIndex: 'ui.userName',\r\n          key: 'userName',\r\n          className:'Titles',\r\n          width:'20%'\r\n        },\r\n        {\r\n          title: '时间',\r\n          dataIndex: 'mtime',\r\n          key: 'date',\r\n          width:'30%',\r\n          className:'Titles'\r\n        },\r\n        {\r\n          title: \"\",\r\n          key: \"action\",\r\n          width:'10%',\r\n          height:'5%',\r\n          className:'Titles',\r\n          render: (text, record) => (\r\n            record.uid !== StorageUtils.getUser().id?\r\n              <a size=\"small\" disabled >删除</a> :\r\n              <a size=\"small\" onClick={()=>this.deletemessage(record.id)}>删除</a>\r\n          )\r\n        }\r\n      ]\r\n\r\n      const titles = this.state.titles\r\n\r\n      return (\r\n            <div className='title'>\r\n              <div className='title-div'>\r\n                <p className='title-p'>留言列表</p>\r\n              </div>\r\n                <Table\r\n                  rowKey='id'    //指定key为uid，可以自动设置为每个标题的key\r\n                  loading={loading}  //是否出现加载标志\r\n                  columns={columns}\r\n                  dataSource={titles}\r\n                  className='title-titles'\r\n                  pagination={{\r\n                    showQuickJumper: true, //快速跳转\r\n                    total, //总数\r\n                    onChange: this.getProducts ,//变化触发\r\n                    current: this.pageNum //当前页\r\n                  }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Input,Button,message} from 'antd';\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport './wirte.less'\r\nimport {addComment,addComments} from '../../../ajax/types'\r\nimport storageUtils from '../../../utils/storageUtils'\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default class Write extends Component {\r\n    state = {\r\n        contentCounts:200,\r\n        commentCounts:100,\r\n        title:\"\",\r\n        content:\"\",\r\n        comment:\"\",\r\n        display2:'block',\r\n        display3:'none',\r\n        record:{}\r\n    }\r\n\r\n\r\n  componentWillUnmount() {\r\n    // 卸载异步操作设置状态\r\n    clearTimeout(this.timeouter)\r\n    this.setState = (state, callback) => {\r\n      return\r\n    }\r\n  }\r\n    //获取时间\r\n    getDate = (Date)=>{\r\n      var time = Date.getFullYear()+\"-\"\r\n      if(Date.getMonth()>9)\r\n        time = time+Date.getMonth()+\"-\"\r\n      else\r\n        time = time+\"0\"+Date.getMonth()+\"-\"\r\n      if(Date.getDate()>9)\r\n        time = time+Date.getDate()+\"  \"\r\n      else\r\n        time = time+\"0\"+Date.getDate()+\"  \"+Date.getHours()+\":\"+Date.getMinutes()+\":\"\r\n      if(Date.getHours()>9)\r\n        time = time+Date.getHours()+\":\"\r\n      else\r\n        time = time+\"0\"+Date.getHours()+\":\"\r\n      if(Date.getMinutes()>9)\r\n        time = time + Date.getMinutes() + \":\"\r\n      else\r\n        time = time + \"0\" + Date.getMinutes() + \":\"\r\n      if(Date.getSeconds()>9)\r\n        return time+Date.getSeconds()\r\n      else\r\n        return time+\"0\"+Date.getSeconds()\r\n    }\r\n\r\n    //退出\r\n    out = ()=>{\r\n      if(window.confirm('确定退出登录吗？')){\r\n        storageUtils.removeUser()\r\n        this.props.history.replace('/')\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n     this.write1 = PubSub.subscribe('write1',(msg,data)=>{\r\n        this.setState({display2:data})\r\n      })\r\n      this.write2 = PubSub.subscribe('write2',(msg,data)=>{\r\n        this.setState({display3:data})\r\n      })\r\n      this.record = PubSub.subscribe('record',(msg,data)=>{\r\n        this.setState({record:data})\r\n      })\r\n    }\r\n\r\n  //发表留言\r\n    onSubmit = async ()=>{\r\n      const {title,content} = this.state\r\n      const messageinfo = {\r\n        title,\r\n        uid:storageUtils.getUser().id,\r\n        mtime:this.getDate(new Date()),\r\n        mid:storageUtils.getUser().id,\r\n      }\r\n      const messagedetail = {\r\n        //id:storageUtils.getUser().id,\r\n        mcontent:content\r\n      }\r\n      const obj = {\r\n        \"messageinfo\" : messageinfo,\r\n        \"messagedetail\" : messagedetail\r\n      }\r\n      //向后台发送数据\r\n      if(!title||!content){\r\n        message.error('标题和内容不能为空')\r\n      }else{\r\n          const result =await addComment(obj)\r\n          console.log(obj)\r\n        if(result.flag==='1'){\r\n          message.success('发表成功')\r\n          PubSub.publish(\"reload\",'true')\r\n          this.setState({title:'',content:'',contentCounts:200})\r\n        }else{\r\n          message.error('发表失败，请重新发表')\r\n        }\r\n      }\r\n    }\r\n\r\n    //发表评论\r\n  onSubmit1 = async ()=>{\r\n      const {record,comment} = this.state\r\n      console.log(\"haha\")\r\n      console.log(record)\r\n      if(comment){\r\n        const messagedetail = {\r\n          mcontent: comment,\r\n          id:storageUtils.getUser().id,  //评论者id\r\n          mid: record.id         //文章id\r\n        }\r\n        const result =await addComments(messagedetail)\r\n        console.log(result)\r\n        if(result.flag==='1'){\r\n          message.success('评论成功')\r\n          PubSub.publish(\"reload1\",'true')\r\n          this.setState({comment:'',commentCounts:100 })\r\n        }else{\r\n          message.error('评论失败，请重新评论')\r\n        }\r\n      }else{\r\n        message.error('评论内容不能为空')\r\n      }\r\n  }\r\n    //获取标题可写剩余字数\r\n    counterTitle = (event)=> {\r\n      let titleCounts = event.target.value + \"\"  //获取文本内容\r\n      if (titleCounts.length > 10) {\r\n        titleCounts = titleCounts.slice(0,10)\r\n      }\r\n      this.setState({title:titleCounts})\r\n    }\r\n\r\n    //获取文本框可写剩余字数\r\n    counterContent = (event,num)=> {\r\n      let contentCounts = event.target.value + \"\" //获取文本域的内容\r\n      let count\r\n      if (contentCounts.trim().length > num) {\r\n        contentCounts = contentCounts.slice(0, num)\r\n      } else {\r\n        count = num - contentCounts.trim().length           //计算还能输入字数\r\n      }\r\n      if (num === 200)\r\n        this.setState({contentCounts: count || 0, content: contentCounts})        //更新count\r\n      else\r\n        this.setState({commentCounts: count || 0, comment: contentCounts})        //更新count\r\n    }\r\n\r\n\r\n    render() {\r\n        const {contentCounts,title,content,display2,display3,comment,commentCounts} =this.state\r\n        const user = storageUtils.getUser()\r\n        return (\r\n          <div className='write'>\r\n            <div className='write-head'>\r\n              <p className='write-head-p font'>Hello  <span style={{fontSize:30,color:'#0074D9'}}>{user.userName}</span></p>\r\n              <p className='out' onClick={this.out}>退出登录</p>\r\n              <p className='write-head-p1 font'>欢迎登录BBS</p>\r\n            </div>\r\n            <div className='write-writting' style={{display:display2}}>\r\n              <h2>发表新留言</h2>\r\n              <div className='write-title'>\r\n                <span className='font'>标题：</span>\r\n                <Input className='write-title-input' placeholder='最多十位' onChange={this.counterTitle} value={title}/>\r\n              </div>\r\n              <div className='write-content'>\r\n                <p className='font' style={{marginLeft:'-200px'}}>留言内容：</p>\r\n                <TextArea\r\n                  autosize={{ minRows: 10}}\r\n                  className='write-content-input'\r\n                  onChange={(event)=>this.counterContent(event,200)}\r\n                  value={content}\r\n                />\r\n                <p className='tips'>还能输入{contentCounts}个字</p>\r\n              </div>\r\n              <br/>\r\n              <div className='write-footer'>\r\n                <Button type=\"primary\" onClick={this.onSubmit} className=\"write-button\">\r\n                  发表\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className='write-writting1' style={{display:display3}}>\r\n              <h2>添加新评论</h2>\r\n              <div className='write-content'>\r\n                <p className='font' style={{marginLeft:'-200px'}}>评论内容：</p>\r\n                <TextArea\r\n                  autosize={{ minRows: 6}}\r\n                  className='write-content-input'\r\n                  onChange={(event)=>this.counterContent(event,100)}\r\n                  value={comment}\r\n                />\r\n                <p className='tips'>还能输入{commentCounts}个字</p>\r\n                </div>\r\n              <br/>\r\n              <div className='write-footer'>\r\n                <Button type=\"primary\" onClick={this.onSubmit1} className=\"write-button\">\r\n                  发表\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './details_son.less'\r\n\r\nexport default class SonExampleComment extends Component {\r\n\r\n    state = {\r\n        mid : 0,\r\n        comment :{},\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({load:false})\r\n        // 卸载异步操作设置状态\r\n        clearTimeout(this.timeouter)\r\n        this.setState = (state, callback) => {\r\n            return\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n            const mid = this.props.mid\r\n            //const author = await getDetail(mid)\r\n            const comment = this.props.comment\r\n            this.setState({mid,comment})\r\n    }\r\n\r\n    render() {\r\n        const {comment} = this.state\r\n        return (\r\n        <div className='detail-son'>\r\n            <p className='author'>匿名&nbsp;&nbsp;:</p>\r\n            <div className='comment'>\r\n                {comment.mcontent}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nSonExampleComment.propTypes = {\r\n    comment: PropTypes.object.isRequired,\r\n    mid: PropTypes.number.isRequired,\r\n    display1:PropTypes.string.isRequired\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport SonExampleComment from './datails_son/datails_son'\r\nimport {getSonDetails} from \"../../../ajax/types\"\r\nimport StorageUtils from '../../../utils/storageUtils'\r\nimport './details.less'\r\n\r\nexport default class Datails extends Component {\r\n\r\n    state = {\r\n      detailsReload:false,  //刷新\r\n      display1:'none',    //能否删除留言\r\n      detail_id:0,        //文章id\r\n      detail_mid:0,       //用户id\r\n      detail:{ui:{id:0,userName:\"\"},mtime:'',mcontent:'',title:''},\r\n      comments:[\r\n      ],\r\n      YorN:'none',\r\n      content: '',\r\n      comment:'',\r\n    }\r\n\r\n  componentWillUnmount() {\r\n    // 卸载异步操作设置状态\r\n    clearTimeout(this.timeouter)\r\n    this.setState = (state, callback) => {\r\n      return\r\n    }\r\n  }\r\n  //获取评论和对应的子评论\r\n  async componentDidMount (){\r\n    const author = this.props.location.state.record   //组件间的属性传递\r\n    PubSub.publish('write1','none')\r\n    PubSub.publish('write2','block')\r\n    PubSub.publish('record',author)\r\n    var detail_id = author.id                     //文章id\r\n    var detail_mid = author.uid                   //作者id\r\n    if(StorageUtils.getUser().id===detail_mid){\r\n      this.setState({display1:'block'})\r\n    }\r\n    var comments = await getSonDetails(detail_id)\r\n    console.log(comments)\r\n    if(comments.length>0){\r\n      const content = comments[0].mcontent\r\n      this.setState({content})\r\n    }\r\n    if(comments.length>1){\r\n      comments = comments.slice(1,comments.length).reverse()\r\n    }else{\r\n      comments = []\r\n    }\r\n    this.reload = PubSub.subscribe('reload1',async (msg,data)=>{\r\n      if(data === 'true'){\r\n        this.setState({comments:[]})\r\n        var comments = await getSonDetails(detail_id)\r\n        comments = comments.slice(1,comments.length).reverse()\r\n        this.setState({detail:author,detail_id,detail_mid,comments:comments})\r\n      }\r\n    })\r\n    this.setState({detail:author,detail_id,detail_mid,comments})\r\n}\r\n\r\n    render() {\r\n      const {comments,detail,content,display1} = this.state\r\n      let display = comments.length > 0 ? 'none' : 'block'\r\n      //子评论\r\n        return (\r\n          <div className=\"detail\">\r\n            <div className=\"detail-father\">\r\n              <p className='detail-title'>{detail.title}</p>\r\n              <p className='author'>{detail.ui.userName}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{detail.mtime}</p>\r\n              <div className='comment'>\r\n                <p >{content}</p>\r\n              </div>\r\n            </div>\r\n            <h1>评论：</h1>\r\n            <div className=\"detail-sons\">\r\n              <h2 style={{ display: display }} className='h2'>暂无评论，在左方添加评论！！！</h2>\r\n              <div className=\"detail-son\">\r\n                {\r\n                   comments.map((comment, index) => {\r\n                      return <SonExampleComment comment={comment} key={index} mid={comment.mid} display1={display1}/>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Route, Switch,Redirect} from 'react-router-dom'\r\n\r\nimport Title from './titles/titles'\r\nimport Write from './write/wirte'\r\nimport Datails from './details/details'\r\nimport StorageUtils from '../../utils/storageUtils'\r\nimport User from '../../utils/users'\r\nimport './home.less'\r\nexport default class Home extends Component {\r\n\r\n  componentDidMount() {\r\n     //关闭网页清除缓存\r\n    // window.onbeforeunload = function (e) {\r\n    //   StorageUtils.removeUser()\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // 卸载异步操作设置状态\r\n    clearTimeout(this.timeouter)\r\n    this.setState = (state, callback) => {\r\n      return\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //判断是否是非法登录\r\n    if(!User.user.id){\r\n      console.log(StorageUtils.getUser())\r\n      console.log(User.user.id)\r\n      return <Redirect to='/'/>\r\n    }\r\n        return (\r\n            <div className='home'>\r\n                <header className=\"home-header\">\r\n                    <h1>BBS</h1>\r\n                </header>\r\n                <div className='home-content'>\r\n                    <div className='home-content-right'>\r\n                        <Switch>\r\n                            <Route path='/home/detail' component={Datails}/>\r\n                            <Route path='/' component={Title}/>\r\n                        </Switch>\r\n                    </div>\r\n                    <div className='home-content-left'>\r\n                        <Route path='/' component={Write}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Icon,\r\n    Input,\r\n    Button,\r\n    message\r\n} from 'antd'\r\n\r\nimport {addNewUser,adminUser} from '../../ajax/types'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport User from '../../utils/users'\r\n\r\nimport './login.less'\r\n\r\nconst Item = Form.Item\r\n\r\nclass Login extends Component {\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault() //阻止表单的默认行为\r\n        //收集表单数据并进行验证\r\n        this.props.form.validateFields(async (err,values) =>{\r\n            if(values.password!== values.password2){\r\n                message.error(\"两次密码不一样，请重新输入密码\")\r\n            }else{\r\n                if(!err){ //检验成功\r\n                    const {userName,password} = values\r\n                    const result = await addNewUser(userName,password)\r\n                    console.log(result)\r\n                    var result1\r\n                    if(result.flag==='1')\r\n                        result1 = await adminUser(userName,password)\r\n                    console.log(result1)\r\n                    if(result.flag==='1'&&result1.flag===1){\r\n                        message.success('注册成功')\r\n                        var user = result1.userinfo // 保存在内存中\r\n                        User.user = user\r\n                        storageUtils.saveUser(user) // 保存到local中\r\n                        this.props.history.replace('/home')\r\n                    }else if(result.flag==='1'&&result1.flag!==1){\r\n                        message.error(\"注册失败\")\r\n                    }\r\n                }else{\r\n                    message.error(\"数据格式错误，请重新填写\")\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    validatePwd = (rule, value, callback) => {\r\n        if(!value) {\r\n            callback('密码必须输入')\r\n        } else if (value.length<4) {\r\n            callback('密码长度不能小于4位')\r\n        } else if (value.length>12) {\r\n            callback('密码长度不能大于12位')\r\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n            callback('密码必须是英文、数字或下划线组成')\r\n        } else {\r\n            callback() // 验证通过\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const form = this.props.form\r\n        const { getFieldDecorator } = form;\r\n\r\n        if(!User.user&&User.user.id){\r\n            return <Redirect to='/'/>\r\n        }\r\n        return (\r\n          <div className=\"login\">\r\n              <header className=\"login-header\">\r\n                  <h1>BBS</h1>\r\n              </header>\r\n              <section className=\"login-content\">\r\n                  <h2>用户注册</h2>\r\n                  <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                      <Item>\r\n                          {\r\n                              getFieldDecorator('userName', {\r\n                                  rules: [\r\n                                      { required: true, whitespace: true, message: '用户名必须输入' },\r\n                                      { min: 4, message: '用户名至少4位' },\r\n                                      { max: 12, message: '用户名最多12位' }\r\n                                  ]\r\n                              })(\r\n                                <Input\r\n                                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                  placeholder=\"用户名\"\r\n                                />\r\n                              )\r\n                          }\r\n                      </Item>\r\n                      <Item>\r\n                          {\r\n                              getFieldDecorator('password', {\r\n                                  rules: [\r\n                                      {\r\n                                          validator: this.validatePwd\r\n                                      }\r\n                                  ]\r\n                              })(\r\n                                <Input\r\n                                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                  type=\"password\"\r\n                                  placeholder=\"密码\"\r\n                                />\r\n                              )\r\n                          }\r\n                      </Item>\r\n                      <Item>\r\n                          {\r\n                              getFieldDecorator('password2', {\r\n\r\n                              })(\r\n                                <Input\r\n                                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                  type=\"password\"\r\n                                  placeholder=\"再次确认密码\"\r\n                                />\r\n                              )\r\n                          }\r\n                      </Item>\r\n                      <Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                              注册\r\n                          </Button>\r\n                      </Item>\r\n                  </Form>\r\n              </section>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrapLogin = Form.create()(Login)\r\nexport default WrapLogin\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Admin from './components/admin/admin'\r\nimport Home from './components/home/home'\r\nimport Login from './components/login/login'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                  <Route path='/login' component={Login}></Route>\r\n                  <Route path='/home' component={Home}></Route>\r\n                  <Route path='/' component={Admin}></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport StorageUtils from './utils/storageUtils'\r\nimport User from './utils/users'\r\nimport App from './App'\r\n\r\nconst user = StorageUtils.getUser()\r\nUser.user = user\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}